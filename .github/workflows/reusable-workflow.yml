name: Reusable workflow

on:
  workflow_dispatch:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      firstword:
        description: "The first output string"
        value: ${{ jobs.example_job.outputs.output1 }}
      secondword:
        description: "The second output string"
        value: ${{ jobs.example_job.outputs.output2 }}
      branch: 
        description: "branch"
        value: ${{ jobs.example_job.outputs.branch }}

jobs:
  prepare_run:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get_branch.outputs.branch }}
    steps:
      - id: get_branch
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
      - id: print_branch
        run: echo ${GITHUB_REF#refs/heads/}
        
  example_job:
    name: Generate output
    needs: prepare_run
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      output1: ${{ steps.step1.outputs.firstword }}
      output2: ${{ steps.step2.outputs.secondword }}
      branch: ${{ steps.get_branch.outputs.branch }}
    steps:
      - id: wait
        run: sleep 3
      - id: step1
        run: echo "firstword=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT
      - id: get_branch
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

  output_job:
    name: output
    runs-on: ubuntu-latest
    needs: example_job
    steps:
      - id: wait
        run: sleep 3
      - id: output_words
        run: echo ${{needs.example_job.outputs.output1}} ${{needs.example_job.outputs.output2}}
      - id: output_branch
        run: echo ${{needs.example_job.outputs.branch}}

  testing_job:
    name: testing
    runs-on: ubuntu-latest
    needs: prepare_run
    environment: ${{ needs.prepare_run.outputs.branch }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: ls -la
      - id: cat
        run: cat test.txt
      - id: echo-foo
        run: echo ${{ vars.FOO }}
      - id: echo-bar
        run: echo ${{ vars.BAR }}
      - id: echo-secret
        run: echo ${{ secrets.SUPER }}
      - id: write-secret
        run: echo ${{ secrets.SUPER }} > secret.txt
      - id: read-secret
        run: cat secret.txt
      - id: echo-branch
        run: echo ${{ needs.prepare_run.outputs.branch }}

  
      
    
